<!DOCTYPE html>
<html>
  <head>
    <title>XLSX File Upload Results</title>
    <script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>
    <style>
      body {
        font-family: Arial, sans-serif;
        font-size: 14px;
        line-height: 1.5;
        margin: 0;
        padding: 10px;
      }

      h1 {
        font-size: 32px;
        margin: 0 0 20px;
        text-align: center;
      }

      table {
  border-collapse: collapse;
  margin: 0 auto;
  width: 100%;
  table-layout: fixed;
}


th, td {
  border: 1px solid #ccc;
  padding: 10px;
  text-align: center;
  word-break: break-word;
}
      th {
        background-color: #f2f2f2;
        font-weight: bold;
      }

      a {
        color: #007bff;
        text-decoration: none;
      }

      a:hover {
        text-decoration: underline;
      }
      .highlight {
        background-color: yellow;
      }
      .search {
        width: 100%;
        padding: 5px;
        margin-bottom: 20px;
        box-sizing: border-box;
        font-size: 14px;
      }
    </style>
  </head>
  <body>
    <h1>Results</h1>
    <div style="display: flex;justify-content: space-around;">
      <p><button id="downloadBtn" onclick="downloadExcel()">Download Excel</button></p>
      <p><a href="/">Go Back</a></p>
    </div>
    <% headers.forEach(header => { %>
      <input type="text" class="search" placeholder="Search <%= header %>" data-index="<%= headers.indexOf(header) %>" style="width: 10.8%" />
    <% }); %>
    <table id="table">
      <thead>
        <tr>
          <% headers.forEach(header => { %>
            <th><%= header %></th>
          <% }); %>
        </tr>
      </thead>
      <tbody>
        <% rows.forEach((row, index) => { %>
          <% if (row[8] === "NA") { %>
            <tr class="highlight">
          <% } else if(row[8] === "Not Found") { %>
            <tr style="background-color: red;">
          <% } else { %>
            <tr>
          <% } %>
            <% row.forEach(cell => { %>
              <td><%= cell %></td>
            <% }); %>
          </tr>
        <% }); %>
      </tbody>
    </table>
    <script>
      const searchFields = document.querySelectorAll('.search');
      const rows = document.querySelectorAll('tbody tr');

      const searchTable = () => {
        const searchValues = Array.from(searchFields).map(searchField => {
          return searchField.value.toLowerCase();
        });

        rows.forEach(row => {
          let rowVisible = true;

          const cells = row.querySelectorAll('td');

          cells.forEach((cell, index) => {
            const cellContent = cell.textContent.toLowerCase();

            if (cellContent.indexOf(searchValues[index]) === -1) {
              rowVisible = false;
            }
          });

          if (rowVisible) {
            row.style.display = '';
          } else {
            row.style.display = 'none';
          }
        });
      };

      searchFields.forEach(searchField => {
        searchField.addEventListener('keyup', searchTable);
      });

      function downloadExcel() {
    // Get the table data
    var table = document.getElementById('table');
    var rows = Array.from(table.rows);

    // Create a new workbook and worksheet
    var workbook = XLSX.utils.book_new();
    var worksheet = XLSX.utils.table_to_sheet(table);

    // Add the worksheet to the workbook
    XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet1');

    // Convert the workbook to an Excel file buffer
    var excelBuffer = XLSX.write(workbook, { type: 'buffer', bookType: 'xlsx' });

    // Create a Blob from the buffer
    var blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

    // Create a temporary anchor element to trigger the download
    var a = document.createElement('a');
    document.body.appendChild(a);
    a.href = URL.createObjectURL(blob);
    a.download = 'output.xlsx';
    a.click();
    document.body.removeChild(a);
  }
    </script>

  </body>
</html>